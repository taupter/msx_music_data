MGSC (MMLコンパイラ) version 1.02
Copyright(c) 1992-93 by Ain

テキストファイルに書かれたMMLをMGSフォーマットの演奏データへ変換します。

★ 使用方法

※1 起動時にはTPAが48k以上必要です。
※2 本バージョンでコンパイル済みのデータはMGSDRV v3.04以降で演奏できます。

書式:MGSC <Input file> [<Output file>] [Option]

・<Input file>
　ソースのファイル名を指定します。ソースファイルは一般的なテキスト形式のファ
　イルです。拡張子を省略すると.MUSと見なします。

・[<Output file>]
　コンパイル後のデータのファイル名を指定します。省略された場合は<Input file>
　と同じファイル名になります。拡張子は強制的に.MGSとなります。

　※ DOS2では、ファイル名にパスを含めることができます。

・[Option]
　オプションです。いまのところ使用可能なものは以下の通りです。

　-p ... コンパイル終了後、演奏を開始させます。MGSDRVが無いとエラーになります。
	 (MGSDRV.COMの検索手順はMGSELと同じです)演奏中の操作は、SELECTで早送
　　　　 り、ESCで終了です。MGSDRVを常駐させている場合のみSHIFT+ESCで演奏を止
	 めずに終了させることができます。

　-n ... データをセーブしません。デバック中は-pと併用するといいでしょう。

★ 制御命令

・#opll_mode	<0|1>
　OPLLのモード。0はFM9音モード、1はFM6音+リズム音モード。この命令を実行しな
　いと他の命令(MML書き込みを含む)は一切使用できませんので、必ず最初に実行す
　るようにして下さい。

・#lfo_mode	<0|1>
　LFOのモード。1を指定するとLFOの速度が若干速めになります。初期値は0です。

・#title	<"string">
　データのタイトル名を定義します。数行に渡って書きたい場合は"{〜}"で囲んで下
　さい。長さは1kバイトまでです。コメントなどを含んでも構いません。

　例:#title {   "Falcom  Ｙｓ morning grow"
		"要SCC"				}

　引用符(")を文字列中に含ませたい場合は2つ並べて書いて下さい。タイトル名が80
　文字を超えるとObject too bigエラーが発生する場合がありますが、大抵、#alloc
　を使用してトラックバッファを確保(自動的に確保されるバイト数より減らす)すれ
　ば抑えられます。

・#alloc	<track no. = bytes>
　トラックバッファを割り当てます。通常、トラックバッファはそのトラックを初め
　て使用する時に自動的に(16K÷総トラック数(16又は18)バイトが)確保されますが、
　多くのMMLを書き込むトラックがある場合はこの命令であらかじめ確保しておいて
　下さい。

　例:#alloc	0=100	← トラック0に100バイトを割り当てる。
     #alloc {	3=100,
		5=256 } ← 1度複数のトラックバッファを確保する場合。

  トラックバッファの合計は16kバイトまでです。トラック0はMMLを書き込むのでは
　なく、音色設定等で使用されます。設定しなくても初期値で十分足りると思います。

・#allocate
　#allocと同じです。

・#psg_tune	{ cの音程データ,c#の音程データ .... bの音程データ }
　PSG音源およびSCC音源の音程の元となるデータを変更します。それぞれのデータは
　オクターブ1の音程データで、PSGの周波数レジスタに書き込まれる数値をそのまま
　指定します(範囲は0〜4095。12音程分必要)。通常、使用する必要はありません。

・#tempo	<57〜2047>
　テンポを設定します。ソース中、1回のみ有効です。最初にテンポを設定するときは
　MMLのtコマンドではなく、できるだけこちらを使用して下さい。

・#end
　ソースの終わりを定義します。MGSCはこの命令が現われた行でコンパイルを終了し
　ます。通常、ソースの終わりはEOFと見なすので省略できます。

★ マクロ定義

　MGSCではマクロを定義することができます。マクロの呼び出しは、MMLの"*"コマン
ドで行ないます。マクロ定義の段階では、内容についての解釈を一切行ないませんの
でエラーはマクロを呼び出している行で発生します。
　定義の方法は行の先頭で、

　　　*<マクロ番号> = { 文字列 }

　とします。マクロ番号の範囲は0〜255です。文字列は数行に渡って書いても構いま
せんが、終わりには必ず"}"を書いて下さい。再定義(同じマクロ番号に対して2回以
上定義すること)はできません。マクロ全部の長さは4kバイト以内にして下さい。

★ 音色定義

　行の先頭が"@"である場合、音色定義となります。<number>はすべて音色番号を意
　味します。範囲は0〜31です。

・@e<number> = { Mode,Noise,data...data }
　エンベロープデータを定義します。旧MGSDRV(以下MGSDRV ver2.xxのことを示します)
　の_ESETと同じ形式です。

　(1) Mode
  PSG音源で使用された場合のトーン・ノイズのモードを指定します。範囲は0〜3、
　省略値は1です。

　0 ... 変化なし。
　1 ... トーンのみ。
　2 ... ノイズのみ。
　3 ... トーンとノイズ。

　(2) Noise
　PSG音源のノイズ周波数を指定します。PSG音源以外のトラックで使用された場合は
　無視されます。Modeが2以上の場合のみ有効です。範囲0〜31、省略値0。

　※ ModeとNoiseは@コマンド実行時に設定されるだけです。

　(3) Data
　エンベロープデータを指定します。約255文字(内容により異なる)まで書けます。

　　・0〜f(16進数)
　　　その音量を設定して、1カウント待ちます。以下<音量>と記します。

　　・<音量> : <カウント>
　　　音量を設定して、カウント数だけ待ちます。

　　・<音量> = <カウント>
　　　現在の音量から、指定された音量まで自動的に変化させます。

　　・n<ノイズ周波数>
　　　PSG音源のノイズ周波数を変更します。(2)のNoiseと同じです。

　　・/<モード>
　　　PSG音源のモードを変更します。(1)のModeと同じです。

　　・[
　　　繰り返し開始位置の定義。

　　・]
　　　繰り返し終了位置の定義。

　　・@<音色番号>
　　　音色データの変更を行ないます。SCC音源およびFM音源のみ有効です。エンベ
　　　ロープは変更されず、音色データのみが変更されます。当然、@v(@s)で音色
　　　が定義されていなければなりません。

    ・.;、,
    区切り。数値と数値の間に入れて下さい。(例:n4.456789)

　※ <カウント>の範囲は2〜239です。

・@r<number> = { Mode,Noise,AL,AR,DR,SR,SL,RR }
　エンベロープデータを定義します。

　Mode ... @eと同じ。
　Noise .. @eと同じ。
　AL ..... アタックレベル。キーオンされた時の音量レベル。
　AR ..... アタックレート。音の立ち上がりの速さ。
　DR ..... ディケイレート。SRの値になるまでの速さ。
　SR ..... サスティンレート。ARからこの値まで音量レベルが下がります。
　SL ..... サスティンレベル。音量レベルが自動的に下がる速さ。
　RR ..... リリースレート。キーオフされた後、音が消える速さ。

　それぞれのパラメータの範囲は0〜255です。SLとRRを除き、設定される値が大きい
　ほど音量が大きくなります。

　※ @rと@eは同じ領域を使用して定義されますので、同じ番号に対して両方を定義
　　 することはできません。そのような場合は後に設定された方が有効になります。

・@s<number> = { data1 .... data32 }
　SCC音源の音色データを定義します。dataは16進数(00〜ff)です。データは必ず32
　個必要です。

　例:@s02 = { 7f7f7f7f 7f7f7f7f 7f7f7f7f 7f7f7f7f	;PSG
	      80808080 80808080 80808080 80808080 }

・@v<number> = { data ... }
　FM音源のオリジナル音色を定義します。

例:@v15 = {						;BRASS
   ;       TL FB
           25, 7,
   ;       AR DR SL RR KL MT AM VB EG KR DT
            8, 8, 1, 2, 0, 0, 0, 1, 0, 0, 0,
            8, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0 }

　パラメータの並びは旧MGSDRVの_VSETCと同じです。

・@#<number> = <n>
　音色に割り付けられているROM音色番号を変更します。MGSCでは@0〜@14にそれぞれ、
　1〜15のROM音色を割り当てています。@15以上はすべて0(オリジナル音色)となって
　いますので、@vでの音色設定は<number>が15以上である場合のみ意味を持ちます。
　@#はそれぞれの音色に割り当てられているROM音色番号を変更するものです。<n>は
　0〜15で、0がオリジナル音色を意味します(その他の番号については後述)。

★ コメント

　MML書き込みを含む、すべての行の中に";"(セミコロン)が見つかると、それ以降か
ら行の終わり(CRLF)までをコメントと見なして無視します。

★ MMLについて

　行の先頭が1〜Hであると、指定されたトラックへMMLデータが書き込まれます。
#opll_modeの設定値によって、トラックは次のように割り当てられます。

・モード0(FM9音モード)

　1〜3 ... PSG音源
　4〜8 ... SCC音源
　9〜H ... FM音源(A,B,C,D…と続きます)

・モード1(FM6音+リズム音モード)

　1〜3 ... PSG音源
　4〜8 ... SCC音源
　9〜E ... FM音源
　F    ... リズム音(Rでも可能)

　トラックの指定と、MMLデータの間は1つ以上のスペース(タブ)で区切って下さい。
　トラックの指定を複数ならべると1行で複数のトラックへの書き込みができます。

　例:123A v15cdef ← トラック1,2,3,Aに"v15cdef"が書き込まれる。

　音長は、"%"でステップ数を指定することもできます。4分音符は48ステップです。
　(例:a4 = a%48) 1音のステップ数は256まで指定できます。

　以下に、使用可能なMMLを示します。小文字で記述してありますが、実際は大小文
字の区別はありませんのでどちらで書いても構いません。<n>は数値を意味します。
旧MGSDRVと違い、ほとんどの数値は省略できません。MML中のスペース、タブは無視
されます。

・t<n>		テンポの指定。範囲は57〜2047。すべてのトラックに影響する。
		初期値120。

・l<n>		デフォルト音長の指定。範囲は1〜192(テンポによって制限がある)。
		%を用いてステップ数で指定する事も可能。初期値4。

・^<n>		音長コマンドの後に付けて、音長を加算する(タイ)。音長(<n>)を
		省略するとlコマンドで指定した音長になる。足した結果が256を
		超えるとエラーになる。

・&		スラー。音程の後で指定された場合のみ意味を持つ。

・q<n>		音長比。範囲は0〜8。0はキーオフされなくなる(FM音源のみ)。初期
		値8。リズム音トラック不可。

・v<n>		音量の設定。リズム音トラックで指定された場合は全ての楽器の音
		量が設定される。範囲は0〜15。PSG音源ではハードエンベロープが
		無効になる。初期値0。

・v+|-<n>	音量を相対的に変化させる。範囲0〜15。

・)<n>		音量を上げる。v+と同じ効果。<n>の範囲1〜15。リズム音トラック
		で使用すると全ての楽器の音量が変化する。省略値1。

・(<n>		音量を下げる。v-と同じ効果。その他は")<n>"と同じ。

・v<楽器><n>	リズム音トラックのみ有効。それぞれの楽器の音量を設定する。<楽
		器名>は、bsmhcのいずれかを指定する。<n>の範囲は0〜15。

・v<楽器>+|-<n> 指定されたリズム楽器の音量を相対的に変化させる。範囲0〜15。

・k<n>		PSG音源およびSCC音源のみ有効。キーオフされた後で、音が消える
		速さを指定する。範囲は0〜255。0が最も速い。@rで設定されたエ
		ンベロープを使用している場合、およびハードエンベロープ使用中
		は無視(設定はされるが効果は表れない)される。初期値0。

・@<n>		音色を変更する。範囲は0〜31。リズム音トラック不可。

・@e<n>		@eまたは@rで設定されたエンベロープデータを現在使用中の音色に
		コピーする。SCC音源およびFM音源のみ有効。PSG音源で使用された
		場合は@<n>と同じ動作をする。

・@r<n>		@e<n>と同じ。

・m<n>		PSG音源のみ有効。ハードエンベロープの周期を設定する。範囲は
		1〜65535。

・s<n>		PSG音源のみ有効。ハードエンベロープの形状を設定する。ソフト
		エンベロープは解除される。範囲は0〜15。

・n<n>		ノイズ周波数の設定。PSG音源のみ有効。範囲0〜31。

・o<n>		オクターブの設定。範囲1〜8。初期値4。

・>		オクターブを1つ上げる。

・<		オクターブを1つ下げる。

・a〜g[+,-]	音程を発音する。+は半音上がり、-は半音下がる。後に付ける数値
		は音長を示す(省略するとlコマンドの値になる)。

・_音程		直前の音程から指定された音程までポルタメントさせる。
		(例:a_o4c4、a_>>g、a_b%100)

・r		休符。音長が省略された場合はBASICと異なりlコマンドの値になる。

・楽器名[:]	指定されたリズム音を発生。":"を指定すると音長をデフォルトと見
		なす(例:bh4 bh:)。リズム音トラック以外では無効。

・\<n>		デチューン量の設定。範囲-127〜127。初期値0。

・@\<n>		デチューン量を細かく設定する。PSG音源とSCC音源では、範囲-327
		68〜32767。128で約半音ずれる。FM音源では、範囲0〜255。255で
		半音上がる。

・p<n>		PSG音源およびSCC音源のみ有効。音程を自動的に下げる量を設定す
		る。範囲は0〜255。LFOと同時使用は不可能。旧MGSDRVのpコマンド
		と同じ効果を得る場合は128を足す(0〜127と128〜255では補正の仕
		方が異なる)。

・h<n1>,<n2>,<n3>,<n4>
		音程LFOを設定、開始する。波形は三角波のみ。

		n1:ディレイ(0〜255)
		n2:深さ(0〜127)
		n3:スピード(0〜255)
		n4:粗さ(-127〜127)

・@p<n>		LFOの粗さを細かく設定する。PSG音源およびSCC音源のみ有効。範囲
		-32768〜32767。通常、音程LFOを設定した直後に用いる。

・ho		音程LFOを開始する。

・hf		音程LFOを停止する。

・[回数〜]	囲まれた中を指定された回数だけ繰り返して演奏する。回数は0〜
		255。0の場合は無限ループ。省略値は2。16重まで重ねが可能。

・[〜]回数	上と同じ。ただし回数はカッコの外に書く。

・|		繰り返しのコマンドの中で用いる。最後の1ループを演奏中なら、
		そのループを抜ける。

・so		FM音源のみ有効。サスティンをonにする。

・sf		FM音源のみ有効。サスティンをoffにする。(初期状態)

・ko		リズム音トラックのみ有効。リズム音発生の度に音を切らないよ
		うにする(初期状態)。

・kf		リズム音トラックのみ有効。リズム音発生の度に音を切るように
		する。

・/<n>		FM音源では強制的にキーオフさせる(q0実行時などに有効)。PSG音
		源ではトーン、ノイズのモードを変更する。範囲は0〜3。意味は@e
		のModeと同じだが、0は"音を出さない"となる。それ以外のトラッ
		クでは無効。

・y<n1>,<n2>	レジスタn1へデータn2を書き込む。実際に値を書き込む音源は、演
		奏中のトラックによって自動的に判断される。n1の範囲はFM音源(リ
		ズム)の場合0〜56、PSG音源の場合0〜15。データの範囲は0〜255。
		SCC音源では無効。

・*<n>		指定された番号のマクロを呼び出す。8重まで重ねが可能。範囲0〜
		255。

・!		このコマンドを実行したトラックの以降のMMLをすべて無視する。

★ エラーについて

　MGSCはソース中に1つでもエラーが発見されると、適当なエラーメッセージを表示
してコンパイルを中断します。

	<エラーの原因> in <行番号>
	>> <その行の内容(全部)>

　エラーの原因は、漢字ドライバが起動している場合は漢字で、テキストの場合は
英字で表示されます。行番号は0から数えています(KID,AKIDなどとは一致します)。
　必ずしも表示された行にエラーがあるとは限りませんので注意して下さい。

★ 補足

(1) テンポについて

　MGSCではどのようなテンポを設定しても、トラック間のずれ(いわゆるテンポずれ)
は絶対に起こりませんが、演奏中にテンポを変更する場合は注意が必要です。テンポ
の変更(最初に設定する場合は、#tempoを使用して下さい)は必ず1番最初のトラック
で行ない、途中で変更する場合は他のトラックとタイミングを合わせて行なわなけれ
ばなりません。

	例:1 t86l4ct190def
	   2    l8ccddeeff
	   3    l16cdecdecd

　上の例のような位置で変更する場合、ずれは起こりませんが次の例のような場合は
テンポの変更位置が2、3トラックで音程を発生している途中ですので、ずれが起こり
ます。

	例:1 t86l8ct190def
	   2    l4cdef
           3    l4gggg

　テンポはトラック毎に独立しません。上の2つの例はトラック2、3ではテンポが設
定されていませんが、トラック1で変更された時点(正確には、次の音譜発生)で他の
トラックも影響を受けます。

(2) 音長指定について

　MGSCの"%"指定による音長指定の意味は、旧MGSDRVと異なります。旧MGSDRVではテ
ンポによって数値が異なりましたが、MGSCではテンポの影響を受けません。例えば
4分音符は常に%48です。MGSCでは192で割り切る音長を使用する限り、%で音長を指定
する必要はありません。5連符などは192では割り切れませんので、そのような場合は
適当に等分した音長を%で指定する必要があります。
　使用可能な最短音長はテンポによって影響を受けます(MGSDRVでは1/60秒以下の音
長を発生することはできません)。あるテンポでの最短音符は次の式で計算できます。

	14400÷テンポ = 最短音符(小数点は切り捨て)

　ただしこの式での答えが、192を超えても最短音譜は192分音符となります。

(3) ROM音色番号の割り当て

音色番号    ROM音色番号    音色名
　  0            1	   バイオリン
    1            2	   ギター
    2		 3	   ピアノ
    3		 4	   フルート
    4		 5	   クラリネット
    5		 6	   オーボエ
　　6		 7	   トランペット
    7		 8	   オルガン
    8		 9	   ホルン
　　9		10	   シンセ
   10		11	   ハープシコード
   11		12	   ビブラフォン
   12		13	   シンセベース
   13		14	   ウッドベース
   14		15	   エレキベース
   15		 0
　  :		 :	   オリジナル音色
   31		 0

※ 音色名は、MSX-MUSICとは異なります。

★ ver1.01からの変更点

・リズム音トラックで休符を使用すると正常に演奏しないというバグを修正しました。
　(ver1.01はパッチ当てする必要がありました)

・#endを追加しました。例えば、MSX-MUSICからの移植の場合は、BASICプログラムを
　ASCIIセーブして#endを冒頭に置き、エディタでコピーしながら修正すると比較的
　楽に行なえます。

・#tempoを使用してテンポを設定すると音長指定のエラーチェックが正常に行なわれ
　なくなるというバグを修正しました。

・エンベロープ(@e)中で音色の切り替えができるようにしました。

・FM音源にも@\コマンドを使用できるようにしました。


★ 転載、配布は自由に行なって下さい。



						     Special thanks:TARO
								    Saibara
								    BLASTER

							参考:MXCのドキュメント

							MARIO NET  :AIN
							FALCON NET :AIN
							Y-Chan NET :AIN
							NATSUME NET:NAT25667

								Ａｉｎ
